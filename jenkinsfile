pipeline {
    agent any

    stages {
        stage('Building') {
            agent {
                docker {
                    image 'ugcs-client-build-env'
                    label 'ubuntu-mac'
                    args '-u root --privileged -v /mnt/ugcs:/mnt/ugcs'
                }
            }
            steps {
                script {
                    env.build_type='mac'
                    env.SOURCE_PATH='/mnt/ugcs/src'
                    env.BUILD_PATH='/root'
                    env.build_type_client='Release'
                    env.unity_license='/mnt/ugcs/src/build-scripts/Unity_v2021.x.ulf'
                    if (env.client_type == 'win') {
                        sh "${SOURCE_PATH}/build-scripts/build_client_docker.sh -s ${SOURCE_PATH} -b ${BUILD_PATH} -t ${build_type_client} -p win -l ${unity_license}"
                    }
                    if (env.build_type == 'mac') {
                        sh "${SOURCE_PATH}/build-scripts/build_client_docker.sh -s ${SOURCE_PATH} -b ${BUILD_PATH} -t ${build_type_client} -p mac -l ${unity_license}"
                    }
                    if (env.build_type == 'linux') {
                        sh "${SOURCE_PATH}/build-scripts/build_client_docker.sh -s ${SOURCE_PATH} -b ${BUILD_PATH} -t ${build_type_client} -p linux -l ${unity_license}"
                    }
                }
            }
        }
        stage('Deploy') {
            agent { node { label 'master' }}
            steps {
                echo 'Deploying....'
            }
        }
    }
}